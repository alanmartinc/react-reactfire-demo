import { getDownloadURL } from 'rxfire/storage';
import { Observable } from 'rxjs';
import { useObservable } from '..';
function _fromTask(task) {
    return new Observable(function (subscriber) {
        var progress = function (snap) {
            return subscriber.next(snap);
        };
        var error = function (e) { return subscriber.error(e); };
        var complete = function () {
            return subscriber.complete();
        };
        task.on('state_changed', progress, error, complete);
    });
}
export function useStorageTask(task, ref, options) {
    return useObservable(_fromTask(task), 'upload' + ref.toString(), options ? options.startWithValue : undefined);
}
export function useStorageDownloadURL(ref, options) {
    return useObservable(getDownloadURL(ref), 'download' + ref.toString(), options ? options.startWithValue : undefined);
}
