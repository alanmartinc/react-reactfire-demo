{"ast":null,"code":"import _defineProperty from \"/Users/urielhdzc/Documents/dev/javascript/react-tlhztg/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/urielhdzc/Documents/dev/javascript/react-tlhztg/src/list.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useFirebaseApp, useFirestoreCollection } from 'reactfire';\nimport 'firebase/firestore';\nexport default (props => {\n  const firebaseApp = useFirebaseApp();\n  const videosRef = firebaseApp.firestore().collection('videos');\n  const videos = useFirestoreCollection(videosRef).docs.map(d => _objectSpread({\n    id: d.id\n  }, d.data()));\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, videos.map(video => React.createElement(\"li\", {\n    key: video.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, video.title)));\n});","map":{"version":3,"sources":["/Users/urielhdzc/Documents/dev/javascript/react-tlhztg/src/list.js"],"names":["React","useFirebaseApp","useFirestoreCollection","props","firebaseApp","videosRef","firestore","collection","videos","docs","map","d","id","data","video","title"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,sBAAzB,QAAuD,WAAvD;AAEA,OAAO,oBAAP;AAEA,gBAAgBC,KAAD,IAAW;AACxB,QAAMC,WAAW,GAAGH,cAAc,EAAlC;AACA,QAAMI,SAAS,GAAGD,WAAW,CAC1BE,SADe,GAEfC,UAFe,CAEJ,QAFI,CAAlB;AAGA,QAAMC,MAAM,GAAGN,sBAAsB,CAACG,SAAD,CAAtB,CAAkCI,IAAlC,CAAuCC,GAAvC,CAA2CC,CAAC;AAAMC,IAAAA,EAAE,EAAED,CAAC,CAACC;AAAZ,KAAmBD,CAAC,CAACE,IAAF,EAAnB,CAA5C,CAAf;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIL,MAAM,CAACE,GAAP,CACGI,KAAD,IAAW;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACF,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBE,KAAK,CAACC,KAA1B,CADb,CAFJ,CADF;AASD,CAfD","sourcesContent":["import React from 'react';\nimport { useFirebaseApp, useFirestoreCollection } from 'reactfire';\n\nimport 'firebase/firestore';\n\nexport default (props) => {\n  const firebaseApp = useFirebaseApp();\n  const videosRef = firebaseApp\n    .firestore()\n    .collection('videos');\n  const videos = useFirestoreCollection(videosRef).docs.map(d => ({id: d.id, ...d.data()}));\n  return(\n    <ul>\n      {\n        videos.map(\n          (video) => <li key={video.id}>{video.title}</li>\n        )\n      }\n    </ul>\n  )\n}"]},"metadata":{},"sourceType":"module"}