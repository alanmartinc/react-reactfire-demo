{"ast":null,"code":"import * as React from 'react';\nimport { useFirebaseApp } from '..';\n\nfunction getPerfFromContext() {\n  var firebaseApp = useFirebaseApp();\n\n  if (!firebaseApp) {\n    throw new Error('Firebase not found in context. Either pass it directly to a reactfire hook, or wrap your component in a FirebaseAppProvider');\n  }\n\n  var perfFunc = firebaseApp.performance;\n\n  if (!perfFunc || !perfFunc()) {\n    throw new Error(\"No perf object off of Firebase. Did you forget to import 'firebase/performance' in a component?\");\n  }\n\n  return perfFunc();\n}\n\nexport function SuspenseWithPerf(_a) {\n  var children = _a.children,\n      traceId = _a.traceId,\n      fallback = _a.fallback,\n      firePerf = _a.firePerf;\n  firePerf = firePerf || getPerfFromContext();\n  var trace = React.useMemo(function () {\n    return firePerf.trace(traceId);\n  }, [traceId]);\n\n  var Fallback = function () {\n    React.useLayoutEffect(function () {\n      trace.start();\n      return function () {\n        trace.stop();\n      };\n    }, []);\n    return React.createElement(React.Fragment, null, fallback);\n  };\n\n  return React.createElement(React.Suspense, {\n    fallback: React.createElement(Fallback, null)\n  }, children);\n}","map":null,"metadata":{},"sourceType":"module"}